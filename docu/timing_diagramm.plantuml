
@startuml timing_diagram_analyse_network_data
hide footbox

participant "neTTool\n"  as neTTool
participant "data: \n UcGetNetworkData" as data
participant "infrastructure.\nSavedPacketsAdapter" as reader
participant "pcap-package\n" as gopacket
participant "CreateConnectionList\n" as CreateConnectionList

neTTool -> data: object creation data:UcGetNetworkData
note right of neTTool
 Use of **Port-Adapter-Pattern**
 (alternativ adapter for live network data)
end note
neTTool -> data: data.Source: infrastructure.SavedPacketsAdapter\n{FileAndFolder: mySettings.pcapSource}
neTTool -> data: Read()
activate data #FFBBBB
note right of data
 delegation of call
end note
data -> reader: Source.Read()
reader -> gopacket: pcap-file
gopacket -> reader: map[int]gopacket.Packet
reader -> data: map[int]gopacket.Packet
data -> neTTool: packetSource: map[int]gopacket.Packet
deactivate data

neTTool -> data: CreateNetworkData(packetSource)
activate data #FFBBBB
data -> CreateConnectionList: map[int]gopacket.Packet
activate CreateConnectionList #FFBBBB
  loop all ethernet packets
            CreateConnectionList -> gopacket: Ethernet package
            gopacket -> CreateConnectionList: Ethernet data
            CreateConnectionList -> CreateConnectionList: process \n data
  end
CreateConnectionList -> data: map[string]domain.CommonConnection, map[string]domain.Node
deactivate CreateConnectionList
data -> neTTool: connectionsList: map[string]domain.CommonConnection, \nnodeList:map[string]domain.Node
deactivate data

@enduml

@startuml timing_diagram_connectionGraph_creation
hide footbox

participant "neTTool\n\n"  as neTTool
participant "connectionPreparation:\nusecases.\nUcPreparationConnections" as usecase
participant "graphDestination:\ninfrastructure.\nSaveConnectionGraphToFsAdapter" as destination
control "GraphViz" as graph
database "Filesystem" as fs

neTTool -> neTTool: object creation \n'graphDestination' of type \n**infrastructure.SaveConnectionGraphToFsAdapter**
neTTool -> neTTool: object creation \n'connectionPreparation' of type \n**usecases.UcPreparationConnections** \nwith Destination: graphDestination
neTTool -> usecase: doExport(connectionsList)
activate usecase #FFBBBB

usecase -> usecase: MakeConnetionGraph(connectionsList) \nreturn conncetionGraph
usecase -> destination: ExportConnectionGraph(conncetionGraph)
destination -> fs: create 'networkgraph.gv'
destination -> graph: create 'networkgraph.png' \nbased on 'networkgraph.gv'
graph -> fs: create 'networkgraph.png'
destination -> usecase
usecase -> neTTool
deactivate usecase

@enduml

@startuml timing_diagram_node_creation
hide footbox

participant "neTTool\n\n"  as neTTool
participant "nodePreparation:\nusecases.\nUcPreparationNodes" as usecase
participant "nodeDestination:\ninfrastructure.\nSaveNodeGraphToFsAdapter" as destination
database "Filesystem" as fs

neTTool -> neTTool: object creation \n'nodeDestination' of type \n**infrastructure.SaveNodeGraphToFsAdapter**
neTTool -> neTTool: object creation \n'connectionPreparation' of type \n**usecases.UcPreparationNodes** \nwith Destination: graphDestination
neTTool -> usecase: doExport(nodeList)
activate usecase #FFBBBB

usecase -> usecase: MakeNodeGraph(nodeList) \nreturn conncetionGraph
usecase -> destination: ExportNodeGraph([]nodes)
destination -> fs: create 'nodes.plantuml'
destination -> usecase
usecase -> neTTool
deactivate usecase

@enduml

@startuml timing_diagram_pn_creation
hide footbox

participant "neTTool\n\n"  as neTTool
box "object: profinetPreparation\ntype: usecases.UcProfiNETAnalysis" #LightGreen
  participant "**DoExport()**" as usecase2
  participant "**CalcProfiNetDeltaTimeInMS()**" as usecase
end box

box "object: profinetDestination:\ntype: infrastructure.SavePNGraphToFsAdapter." #LightBlue
  participant "**DoExport()**" as destination
  participant "**exportBoxplot()**" as destination2
  participant "**exportBoxplotStatistics()**" as destination3
end box
database "Filesystem" as fs

neTTool -> neTTool: object creation \n**profinetDestination**
neTTool -> neTTool: object creation \n**profinetPreparation**  \nwith Destination: graphDestination
neTTool -> usecase2: profinetPreparation.DoExport(connectionList)
activate neTTool #DarkSalmon
activate usecase2 #DarkSalmon

usecase2 -> usecase: connectionList
activate usecase #DarkSalmon
usecase -> usecase2: connectionList
deactivate usecase 

usecase2 -> destination: Destination.DoExport(connectionList)

activate destination #DarkSalmon

destination -> destination2: connectionList
activate destination2 #DarkSalmon
destination2 -> fs: create 'boxplot.pdf'
destination2 -> destination: statistics
deactivate destination2

destination -> destination3: statistics
activate destination3 #DarkSalmon
destination3 -> fs: create 'boxplotStatistics.txt'
destination3 -> destination
deactivate destination3
deactivate destination
destination -> usecase2
deactivate usecase2
usecase2 -> neTTool
deactivate usecase
deactivate neTTool

@enduml
